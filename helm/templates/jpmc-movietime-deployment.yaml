---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-gencache
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: jpmc-movietime-generate-cache
        image: "{{ .Values.JPMCMovieTimeGenCache.image.repository }}:{{ .Values.JPMCMovieTime.image.tag }}"
        imagePullPolicy: Always
        env:
          - name: AB_MOVIE_S3_URL
            value: "{{ .Values.JPMCMovieTimeGenCache.ABMovieS3URL }}"
          - name: MODE
            value: "gencache"
        volumeMounts:
        - name: persistent-storage
          mountPath: "/data"
        securityContext:
          seLinuxOptions:
            level: "s0:c123,c456"
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: movietime-ebs-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: jpmc-movietime-api
        image: "{{ .Values.JPMCMovieTime.image.repository }}:{{ .Values.JPMCMovieTime.image.tag }}"
        imagePullPolicy: Always
        env:
          - name: MODE
            value: "apiserver"
        ports:
          - containerPort: {{ .Values.JPMCMovieTime.service.port }}
        readinessProbe:
          exec:
            command:
            - stat
            - /data/movie-query-cache-index.json
            - /data/movie-copy.json
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 100
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 3
        volumeMounts:
        - name: persistent-storage
          mountPath: "/data"
        securityContext:
          seLinuxOptions:
            level: "s0:c123,c456"
          
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: movietime-ebs-claim
